{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategorie","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GiftExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBI,OAEA,sBAAMC,SAhBW,SAACC,GAGlBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAa,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACtCN,EAAc,MASlB,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SAzBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAEnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXtB,kBAgBZM,GAhBY,4CAAH,sDCDPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,sBAAKgB,UAAU,2DAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAIrB,ECJ0B,SAAAA,GAE1B,MAA0Bd,mBAAS,CAE/BqB,KAAM,GACNe,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OAnBAC,qBAAU,WAEN1B,EAASC,GAER0B,MAAM,SAAAC,GAEHC,YAAW,WACPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAGd,UAKR,CAACtB,IAEGuB,EDxBoBM,CAAa7B,GAA/BO,EAAT,EAASA,KAAMe,EAAf,EAAeA,QAIf,OAEI,qCAEA,oBAAIJ,UAAU,sDAAd,SAAsElB,IACpEsB,GAAW,yCAKT,qBAAKJ,UAAU,YAAf,SAEQX,EAAKE,KAAO,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADEA,YEgBhBoB,EAvCO,WAItB,MAAoC5C,mBAAS,IAA7C,mBAAO6C,EAAP,KAAmBC,EAAnB,KAWI,OACI,qCACK,+CACA,cAAC,EAAD,CAAa/C,aAAgB+C,IAC7B,uBAEA,6BAEOD,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAaA,GADLA,Y,MCrBhCiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.19bd0e30.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport React, {useState} from 'react'\r\n\r\n\r\nexport const AddCategory = ({setCategorie}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handelSubmit = (e) => {\r\n        \r\n        \r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 1){\r\n            setCategorie(cats => [ inputValue ,...cats]);\r\n            setInputValue('');\r\n\r\n        }\r\n\r\n        \r\n        // console.log('Submit hecho')\r\n    }\r\n        return (\r\n      \r\n        <form onSubmit = {handelSubmit}>\r\n            <input \r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n\r\n            />\r\n        </form>\r\n        \r\n    )\r\n\r\n\r\n}\r\n\r\n    AddCategory.propTypes = {\r\n\r\n        setCategorie : PropTypes.func.isRequired   \r\n       \r\n    }\r\n\r\n    \r\n","\r\n\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=zyHQKJLHYlGGs9IWU9w8iUV4AxOtc6vI`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React /*useEffect, useState*/ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpels/getGifs';\r\nimport {GifGridItem} from '../components/GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    \r\n\r\n    const  { data, loading } = useFetchGifs(category);\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <>\r\n\r\n        <h3 className='animate__animated animate__bounce animate__delay-2s'>{ category }</h3>\r\n        { loading && <p>Loading </p> }\r\n\r\n\r\n\r\n           \r\n            <div className=\"card-grid\">\r\n            {  \r\n                    data.map( ( img =>\r\n                        <GifGridItem            \r\n                        key = {img}\r\n                        { ...img }\r\n                        />\r\n                    ))\r\n            }\r\n        </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category  => {\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs( category )\r\n\r\n        .then( imgs =>{\r\n\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            }, 3000);\r\n            \r\n        });\r\n    \r\n\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n})","import React, {useState} from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n//const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\nconst [categories, setCategories] = useState([]);\r\n\r\n//    const handleAdd = () => {\r\n\r\n//         const nombre = 'HunterXHunter'\r\n//         setCategories([...categories, nombre]);\r\n\r\n//          setCategories(cats => [...cats., 'HunterXHunter']);\r\n\r\n//    }\r\n    \r\n    return (\r\n        <>\r\n             <h2>GiftExpertApp</h2>\r\n             <AddCategory setCategorie ={ setCategories }/>\r\n             <hr />\r\n             \r\n             <ol>\r\n                 {  \r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                        key = { category }\r\n                        category = { category } \r\n                        />\r\n                    ))\r\n                 }\r\n             </ol>\r\n            \r\n        </>\r\n        \r\n\r\n    )\r\n\r\n}\r\n\r\nexport default GiftExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\n\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n\n//GiftExpertApp\n//<h2>GiftExpertApp</h2>\n//<hr />\n\n"],"sourceRoot":""}